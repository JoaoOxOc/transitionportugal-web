// <auto-generated />
using System;
using ContentManageService.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ContentManageService.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220401100342_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ContentManageService.Entities.Banner", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("boolean");

                    b.Property<string>("PageKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("ContentManageService.Entities.BannerTranslation", b =>
                {
                    b.Property<string>("LangKey")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("BannerDataHtml")
                        .HasColumnType("text");

                    b.Property<string>("BannerDataJson")
                        .HasColumnType("jsonb");

                    b.Property<int?>("BannerId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("LangKey");

                    b.HasIndex("BannerId");

                    b.ToTable("BannerTranslation");
                });

            modelBuilder.Entity("ContentManageService.Entities.BannerTranslation", b =>
                {
                    b.HasOne("ContentManageService.Entities.Banner", "Banner")
                        .WithMany()
                        .HasForeignKey("BannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banner");
                });
#pragma warning restore 612, 618
        }
    }
}
