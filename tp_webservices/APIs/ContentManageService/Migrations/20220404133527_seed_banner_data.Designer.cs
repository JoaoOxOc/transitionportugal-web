// <auto-generated />
using System;
using System.Text.Json;
using ContentManageService.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ContentManageService.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220404133527_seed_banner_data")]
    partial class seed_banner_data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ContentManageService.Entities.Banner", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("boolean");

                    b.Property<string>("PageKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Banner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 4, 14, 35, 27, 649, DateTimeKind.Local).AddTicks(3489),
                            IsDraft = false,
                            PageKey = "aboutheadline"
                        });
                });

            modelBuilder.Entity("ContentManageService.Entities.BannerTranslation", b =>
                {
                    b.Property<string>("LangKey")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("BannerDataHtml")
                        .HasColumnType("text");

                    b.Property<JsonDocument>("BannerDataJson")
                        .HasColumnType("jsonb");

                    b.Property<int?>("BannerId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("LangKey");

                    b.HasIndex("BannerId");

                    b.ToTable("BannerTranslation");

                    b.HasData(
                        new
                        {
                            LangKey = "pt-pt",
                            BannerDataJson = System.Text.Json.JsonDocument.Parse("{\n    \"blocks\": [\n        {\n            \"id\" : \"VDwuz33oJn\",\n            \"type\" : \"header\",\n            \"data\" : {\n                \"text\" : \"banner cabeçalho\",\n                \"level\" : 2\n            }\n        },\n        {\n            \"id\" : \"vFad3244\",\n            \"type\" : \"header\",\n            \"data\" : {\n                \"text\" : \"primeiro elemento\",\n                \"level\" : 3\n            }\n        },\n        {\n            \"id\" : \"vFad3244\",\n            \"type\" : \"paragraph\",\n            \"data\" : {\n                \"text\" : \"texto do primeiro elemento\",\n                \"headerId\" : \"vFad3244\"\n            }\n        }\n    ]\n}", new System.Text.Json.JsonDocumentOptions()),
                            BannerId = 1
                        },
                        new
                        {
                            LangKey = "en-us",
                            BannerDataJson = System.Text.Json.JsonDocument.Parse("{\n    \"blocks\": [\n        {\n            \"id\" : \"VDwuz33oJn\",\n            \"type\" : \"header\",\n            \"data\" : {\n                \"text\" : \"banner header\",\n                \"level\" : 2\n            }\n        },\n        {\n            \"id\" : \"vFad3244\",\n            \"type\" : \"header\",\n            \"data\" : {\n                \"text\" : \"first item\",\n                \"level\" : 3\n            }\n        },\n        {\n            \"id\" : \"vFad3244\",\n            \"type\" : \"paragraph\",\n            \"data\" : {\n                \"text\" : \"first item text\",\n                \"headerId\" : \"vFad3244\"\n            }\n        }\n    ]\n}", new System.Text.Json.JsonDocumentOptions()),
                            BannerId = 1
                        });
                });

            modelBuilder.Entity("ContentManageService.Entities.BannerTranslation", b =>
                {
                    b.HasOne("ContentManageService.Entities.Banner", "Banner")
                        .WithMany()
                        .HasForeignKey("BannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banner");
                });
#pragma warning restore 612, 618
        }
    }
}
