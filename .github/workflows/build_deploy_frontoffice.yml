# This is a basic workflow to help you get started with Actions

name: transition pt frontoffice Build and Deploy 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ deployfront ]


env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REPOSITORY: joaooxoc/transitionportugal-web
  REGISTRY_HOSTNAME: registry.digitalocean.com/photosapi
  IMAGE_NAME: tp_frontoffice
  DEPLOYMENT_NAME: transportugal-frontoffice
  DO_CLUSTER: k8s-photos
  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  FRONTOFFICE_DEPLOYMENT_FILE_NAME: frontoffice_kubernetes.yml

jobs:
  build:
    name: Build docker images and deploy to DO kubernetes
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Install doctl
      uses: digitalocean/action-doctl@v2.1.0
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 6000
      
    - name: Build frontoffice container image
      run: docker build -t "$REGISTRY_HOSTNAME/$IMAGE_NAME" -f $GITHUB_WORKSPACE/frontends/frontoffice.dockerfile ./frontends/
    
    - name: Push frontoffice image to DigitalOcean Container Registry
      run: docker push "$REGISTRY_HOSTNAME/$IMAGE_NAME":latest
      
    
    - name: authenticate to DO
      run: doctl auth init

    - name: Save DigitalOcean kubeconfig
      run: doctl -t $DIGITALOCEAN_ACCESS_TOKEN k8s cluster config save $DO_CLUSTER

    - name: Update deployment file with gateway image registry name
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i "s|<FRONTOFFICE_IMAGE>|$REGISTRY_HOSTNAME/$IMAGE_NAME:latest|" $GITHUB_WORKSPACE/$FRONTOFFICE_DEPLOYMENT_FILE_NAME
      
    - name: process frontoffice environment variables
      run: kubectl delete secret transfrontoffice-data --ignore-not-found && kubectl create secret generic transfrontoffice-data --from-literal=app-auth-url=${{secrets.FRONTOFFICE_AUTH_URL}} --from-literal=home-base-url=${{secrets.FRONTOFFICE_BASE_URL}} --from-literal=cms-external-base-url=${{secrets.FRONTOFFICE_CMS_EXTERNAL_BASE_URL}} --from-literal=cms-internal-base-url=${{secrets.FRONTOFFICE_CMS_INTERNAL_BASE_URL}} --from-literal=cms-auth-api-token=${{secrets.FRONTOFFICE_CMS_AUTH_API_TOKEN}} --from-literal=api-base-url=${{secrets.API_BASE_URL}} --from-literal=api-client-id=${{secrets.FRONTOFFICE_AUTH_CLIENT_ID}} --from-literal=api-client-secret=${{secrets.FRONTOFFICE_AUTH_CLIENT_SECRET}}

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/$FRONTOFFICE_DEPLOYMENT_FILE_NAME

    - name: Verify deployment
      run: kubectl rollout status deployment/$DEPLOYMENT_NAME
