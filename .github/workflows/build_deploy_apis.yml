# This is a basic workflow to help you get started with Actions

name: transition pt APIs Build and Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ deployback ]


env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REPOSITORY: joaooxoc/transitionportugal-web
  REGISTRY_HOSTNAME: registry.digitalocean.com/photosapi
  GATEWAY_IMAGE_NAME: tp_gatewayapi
  DEPLOYMENT_NAME: tp-apis
  DO_CLUSTER: k8s-photos
  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  DO_EXTERNAL_IP: ${{secrets.DIGITALOCEAN_EXTERNAL_IP}}
  DIGITALOCEAN_LOADBALANCER_ID: ${{secrets.DIGITALOCEAN_LOADBALANCER_ID}}
  APIS_DEPLOYMENT_FILE_NAME: deploy_apis_pod.yml
  INGRESSES_DEPLOYMENT_FILE_NAME: deploy_apis_ingresses.yml

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build docker images and deploy to DO kubernetes
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Install doctl
      uses: digitalocean/action-doctl@v2.1.0
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    
    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 6000

    - name: authenticate to DO
      run: doctl auth init

    - name: Save DigitalOcean kubeconfig
      run: doctl -t $DIGITALOCEAN_ACCESS_TOKEN k8s cluster config save $DO_CLUSTER
      
    - name: process mongo environment variables
      run: kubectl delete secret mongodb-data --ignore-not-found && kubectl create secret generic mongodb-data --from-literal=mongo-username=${{secrets.MONGO_USERNAME}} --from-literal=mongo-password=${{secrets.MONGO_PASSWORD}}
    
    - name: process MQTT environment variables
      run: kubectl delete secret rabbitmq-data --ignore-not-found && kubectl create secret generic rabbitmq-data --from-literal=rabbitmq-username=${{secrets.API_MQTT_USER}} --from-literal=rabbitmq-password=${{secrets.API_MQTT_PASSWORD}}
    - run: kubectl describe secret rabbitmq-data
    
    - name: Update ingresses deployment file
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i "s|<EXTERNAL_DO_IP>|$DO_EXTERNAL_IP|" $GITHUB_WORKSPACE/$INGRESSES_DEPLOYMENT_FILE_NAME && sed -i "s|<DO_LOADBALANCER_ID>|$DIGITALOCEAN_LOADBALANCER_ID|" $GITHUB_WORKSPACE/$INGRESSES_DEPLOYMENT_FILE_NAME
      
    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/$APIS_DEPLOYMENT_FILE_NAME

    - name: Verify deployment of the apis pod
      run: kubectl rollout status deployment/$DEPLOYMENT_NAME
      
    - name: Deploy services and ingresses to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/$INGRESSES_DEPLOYMENT_FILE_NAME
