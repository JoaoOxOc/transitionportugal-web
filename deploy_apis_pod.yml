kind: PersistentVolume
apiVersion: v1
metadata:
  name: transportugal-volume
  annotations:
    # fake it by indicating this is provisioned dynamically, so the system
    # works properly
    pv.kubernetes.io/provisioned-by: dobs.csi.digitalocean.com
spec:
  storageClassName: do-block-storage
  # by default, the volume will be not deleted if you delete the PVC, change to
  # "Delete" if you wish the volume to be deleted automatically with the PVC
  # persistentVolumeReclaimPolicy: Delete
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  csi:
    driver: dobs.csi.digitalocean.com
    fsType: ext4
    # get volume id: doctl compute volume list
    volumeHandle: 1e2ecd0a-872b-11eb-902c-0a58ac14c037
    volumeAttributes:
      com.digitalocean.csi/noformat: "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tp-mongo-data
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tp-apis
  labels:
    app: tp-apis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tp-apis
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: tp-apis
    spec:
      volumes:
        - name: tp-mongo-data-pv
          persistentVolumeClaim:
            claimName: tp-mongo-data
        - name: tp-rabbitmq-conf-pv
          persistentVolumeClaim:
            claimName: tp-mongo-data
        - name: tp-rabbitmq-def-pv
          persistentVolumeClaim:
            claimName: odoo-app-data
        - name: tp-rabbitmq-mnesia-pv
          persistentVolumeClaim:
            claimName: odoo-app-data
        - name: tp-rabbitmq-log-pv
          persistentVolumeClaim:
            claimName: odoo-app-data
      restartPolicy: Always
      #hostname: tprabbitmq
      containers:
      - name: tpmongo
        image: mongo:latest
        ports:
        - containerPort: 27017
        volumeMounts:
            - mountPath: /data/db
              name: tp-mongo-data-pv
        env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-data
                  key: mongo-password
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-data
                  key: mongo-username
      - name: tprabbitmq
        image: rabbitmq:3.9-management
        ports:
            - containerPort: 5672
            - containerPort: 15672
        volumeMounts:
            - mountPath: /etc/rabbitmq/rabbitmq.conf
              name: tp-rabbitmq-conf-pv
            - mountPath: /etc/rabbitmq/definitions.json
              name: tp-rabbitmq-def-pv
            - mountPath: /var/lib/rabbitmq/mnesia
              name: tp-rabbitmq-mnesia-pv
            - mountPath: /var/log/rabbitmq
              name: tp-rabbitmq-log-pv
        env:
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-data
                  key: rabbitmq-password
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-data
                  key: rabbitmq-username
      imagePullSecrets:
      - name: do-photos-registry-secret
